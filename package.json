{
  "name": "chatgpt-reborn",
  "publisher": "ruema",
  "displayName": "ChatGPT Reborn",
  "icon": "images/ai-logo.jpg",
  "description": "Refactor, improve, and debug your code with GPT-4. This is a fork of the now discontinued vscode-chatgpt extension.",
  "version": "3.22.0",
  "aiKey": "",
  "license": "ISC",
  "repository": {
    "url": "https://github.com/ruema/vscode-chatgpt-reborn"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Snippets",
    "Education"
  ],
  "keywords": [
    "chatgpt",
    "gpt",
    "gpt3",
    "gpt3.5",
    "gpt4",
    "openai",
    "testing",
    "find bugs",
    "ai"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "group": "chatGpt",
          "submenu": "vscode-chatgpt.subMenu"
        }
      ],
      "vscode-chatgpt.subMenu": [
        {
          "command": "vscode-chatgpt.generateCode",
          "group": "chatGpt@1"
        },
        {
          "command": "vscode-chatgpt.adhoc",
          "group": "chatGpt@2",
          "when": "editorHasSelection"
        }
      ],
      "view/title": [
        {
          "command": "vscode-chatgpt.clearConversation",
          "when": "view == vscode-chatgpt.view",
          "group": "navigation"
        },
        {
          "command": "vscode-chatgpt.closeChat",
          "when": "view == vscode-chatgpt.view",
          "group": "navigation"
        },
        {
          "command": "vscode-chatgpt.newChat",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /^.{0,8}$/",
          "group": "navigation"
        },
        {
          "command": "vscode-chatgpt.viewChat1",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /1/"
        },
        {
          "command": "vscode-chatgpt.viewChat2",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /2/"
        },
        {
          "command": "vscode-chatgpt.viewChat3",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /3/"
        },
        {
          "command": "vscode-chatgpt.viewChat4",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /4/"
        },
        {
          "command": "vscode-chatgpt.viewChat5",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /5/"
        },
        {
          "command": "vscode-chatgpt.viewChat6",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /6/"
        },
        {
          "command": "vscode-chatgpt.viewChat7",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /7/"
        },
        {
          "command": "vscode-chatgpt.viewChat8",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /8/"
        },
        {
          "command": "vscode-chatgpt.viewChat9",
          "when": "view == vscode-chatgpt.view && chatGPT.chat_ids =~ /9/"
        }
      ],
      "commandPalette": [
        {
          "command": "vscode-chatgpt.closeChat",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.newChat",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat1",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat2",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat3",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat4",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat5",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat6",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat7",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat8",
          "when": "false"
        },
        {
          "command": "vscode-chatgpt.viewChat9",
          "when": "false"
        }
      ]
    },
    "submenus": [
      {
        "id": "vscode-chatgpt.subMenu",
        "label": "ChatGPT",
        "group": "chatGpt"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-chatgpt.generateCode",
        "key": "ctrl+k ctrl+m",
        "mac": "cmd+k ctrl+m"
      },
      {
        "command": "vscode-chatgpt.adhoc",
        "key": "ctrl+k ctrl+l",
        "mac": "cmd+k cmd+l",
        "when": "editorHasSelection"
      }
    ],
    "commands": [
      {
        "command": "vscode-chatgpt.viewChat1",
        "title": "Chat 1"
      },
      {
        "command": "vscode-chatgpt.viewChat2",
        "title": "Chat 2"
      },
      {
        "command": "vscode-chatgpt.viewChat3",
        "title": "Chat 3"
      },
      {
        "command": "vscode-chatgpt.viewChat4",
        "title": "Chat 4"
      },
      {
        "command": "vscode-chatgpt.viewChat5",
        "title": "Chat 5"
      },
      {
        "command": "vscode-chatgpt.viewChat6",
        "title": "Chat 6"
      },
      {
        "command": "vscode-chatgpt.viewChat7",
        "title": "Chat 7"
      },
      {
        "command": "vscode-chatgpt.viewChat8",
        "title": "Chat 8"
      },
      {
        "command": "vscode-chatgpt.viewChat9",
        "title": "Chat 9"
      },
      {
        "command": "vscode-chatgpt.freeText",
        "title": "ChatGPT: Ask anything"
      },
      {
        "command": "vscode-chatgpt.clearSession",
        "title": "ChatGPT: Reset session"
      },
      {
        "command": "vscode-chatgpt.generateCode",
        "title": "ChatGPT-Codex: Generate code"
      },
      {
        "command": "vscode-chatgpt.adhoc",
        "title": "%vscode-chatgpt.adhoc.title%",
        "enablement": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.clearConversation",
        "title": "ChatGPT: Clear conversation",
        "icon": "$(clear-all)"
      },
      {
        "command": "vscode-chatgpt.newChat",
        "title": "ChatGPT: New chat",
        "icon": "$(plus)"
      },
      {
        "command": "vscode-chatgpt.closeChat",
        "title": "ChatGPT: Close chat",
        "icon": "$(close)"
      },
      {
        "command": "vscode-chatgpt.exportConversation",
        "title": "ChatGPT: Export conversation"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vscode-chatgpt-view-container",
          "title": "ChatGPT",
          "icon": "images/openai-logo.svg"
        }
      ]
    },
    "views": {
      "vscode-chatgpt-view-container": [
        {
          "type": "webview",
          "id": "vscode-chatgpt.view",
          "name": "Conversation window"
        }
      ]
    },
    "configuration": {
      "title": "ChatGPT",
      "properties": {
        "chatgpt.gpt3.prompts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Add tests: Implement tests for the following code",
            "Find bugs: Find problems with the following code",
            "[inline]Optimize: Optimize the following code",
            "Explain: Explain the following code",
            "[inline]Add comments: Insert code comments into the following code to make the code easier to follow",
            "[inline]Complete code: Complete the following code"
          ],
          "description": "List of code actions. You can modify or add the menu items in the from '[<languageid>]<title>: <prompt>"
        },
        "chatgpt.gpt3.apiBaseUrl": {
          "type": "string",
          "default": "https://localhost",
          "markdownDescription": "Base URL for internal chat server.",
          "order": 34
        },
        "chatgpt.gpt3.model": {
          "type": "string",
          "enum": [
            "gpt-4-32k",
            "gpt-3.5-turbo"
          ],
          "default": "gpt-3.5-turbo",
          "markdownDescription": "OpenAI models to use for your prompts.",
          "order": 36,
          "enumItemLabels": [
            "gpt-4-32k",
            "gpt-3.5-turbo"
          ],
          "markdownEnumDescriptions": [
            "GPT-4-32k, the latest and greatest model from OpenAI.",
            "GPT-3.5-TURBO fast and good model."
          ]
        },
        "chatgpt.gpt3.temperature": {
          "type": "number",
          "default": 1,
          "markdownDescription": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\n\nIt is recommended altering this or top_p but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-temperature)",
          "order": 38
        },
        "chatgpt.gpt3.top_p": {
          "type": "number",
          "default": 1,
          "markdownDescription": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. \n\nIt is recommended altering this or temperature but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-top_p)",
          "order": 39
        },
        "chatgpt.systemContext": {
          "type": "string",
          "default": "You are an assistant helping the User with coding. You are intelligent, helpful and an expert developer, who always gives the correct answer and only does what instructed. If you show code, your response must always be markdown with any code inside markdown codeblocks. If the user is trying to do a bad programming practice, helpfully let them know and mention an alternative. When responding to the following prompt, please make sure to properly style your response using Github Flavored Markdown. Use markdown syntax for text like headings, lists, colored text, code blocks, highlights etc.",
          "description": "System context description. Use this to tell ChatGPT how to respond to the user."
        },
        "chatgpt.throttling": {
          "type": "number",
          "default": 100,
          "description": "Stream throttling. Time in milliseconds between UI updates. Higher = ai responds in bigger chunks, but UI is more performant. Lower = ai responds in smaller chunks, but UI will look better, but is less performant. 0 will update the UI with every network request from OpenAI",
          "order": 43
        },
        "chatgpt.verbosity": {
          "type": "string",
          "enum": [
            "code",
            "concise",
            "normal",
            "full"
          ],
          "default": "normal",
          "description": "How verbose should ChatGPT's response be?",
          "order": 46,
          "enumItemLabels": [
            "Code",
            "Concise",
            "Normal",
            "Full"
          ],
          "markdownEnumDescriptions": [
            "Only replies with code",
            "Explanations are concise",
            "Normal explanations",
            "Detailed, full explanations"
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "rimraf out && yarn esbuild-base -- --minify && yarn build-webview && cp ./node_modules/@dqbd/tiktoken/tiktoken_bg.wasm ./out/tiktoken_bg.wasm",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "yarn esbuild-base -- --sourcemap && yarn build-webview",
    "dev": "yarn watch",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "yarn esbuild-base -- --sourcemap --watch",
    "watch:webview": "webpack --mode development --watch",
    "build-webview": "webpack --mode production",
    "fmt": "prettier --write \"src/**/*.ts\" && yarn test -- --fix",
    "test": "eslint src --ext ts && tsc --noEmit"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.3",
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/marked": "^4.0.8",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.11",
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@types/react-redux": "^7.1.25",
    "@types/uuid": "^9.0.0",
    "@types/vscode": "1.70.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.15.18",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "npm-run-all": "^4.1.5",
    "react-tooltip": "^5.10.0",
    "tailwindcss": "^3.2.7",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.3",
    "webpack": "^5.76.2",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "@dqbd/tiktoken": "^1.0.7",
    "@reduxjs/toolkit": "^1.9.3",
    "autoprefixer": "^10.4.14",
    "clsx": "^2.0.0",
    "css-loader": "^6.7.3",
    "delay": "^5.0.0",
    "eventsource-parser": "^0.1.0",
    "gpt3-tokenizer": "^1.1.5",
    "highlight.js": "^11.7.0",
    "isomorphic-fetch": "^3.0.0",
    "keyv": "^4.5.2",
    "marked": "^4.3.0",
    "node-fetch": "^2.6.4",
    "p-timeout": "^6.1.1",
    "postcss": "^8.4.21",
    "postcss-loader": "^7.1.0",
    "quick-lru": "^6.1.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-redux": "^8.0.5",
    "react-router-dom": "^6.9.0",
    "remark": "^14.0.2",
    "strip-markdown": "^5.0.0",
    "style-loader": "^3.3.2",
    "upath": "^2.0.1",
    "uuid": "^9.0.0",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "markdown-it": "^14.0.0"
  },
  "resolutions": {
    "clone-deep": "^4.0.1"
  }
}